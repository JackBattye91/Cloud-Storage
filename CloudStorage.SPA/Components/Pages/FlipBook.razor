@page "/flipbook/{FileName}"
@rendermode InteractiveServer
@inject IHttpClientFactory clientFactory;
@inject IConfiguration configuration;
@inject NavigationManager navManager;

@if (imageSrc == null)
{
    <MudProgressCircular Indeterminate="true" />
}
else
{
    <MudImage Src="@imageSrc" Style="max-width: 100%" />
}

@code {
    [CascadingParameter]
    public AppState? State { get; set; }

    [Parameter]
    public string FileName { get; set; }

    private string? imageSrc = null;
    private IBlobDetail BlobDetail { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (State?.CurrentUser == null)
        {
            navManager.NavigateTo("/");
        }

        await GetImage();
        await base.OnInitializedAsync();
    }

    protected async Task GetImage()
    {
        try
        {
            HttpClient client = clientFactory.CreateClient("api");
            HttpRequestMessage imageRequest = new HttpRequestMessage(HttpMethod.Get, $"Blob/{FileName}");
            HttpResponseMessage imageResponse = await client.SendAsync(imageRequest);

            if (imageResponse.IsSuccessStatusCode)
            {
                byte[] imageData = await imageResponse.Content.ReadAsByteArrayAsync();
                string base64Image = Convert.ToBase64String(imageData);

                imageSrc = $"data:image/jpeg;base64, {base64Image}";
            }
        }
        catch (Exception ex)
        {
            
        }
    }
}
